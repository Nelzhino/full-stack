package com.udemy.serverApps.controller;

import java.net.URI;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.support.ServletUriComponentsBuilder;

import com.udemy.serverApps.models.TodoModel;
import com.udemy.serverApps.services.ITodoService;

@RestController("/jpa")
@CrossOrigin("http://localhost:4200")
public class TodosJpaController {

	@Autowired
	private ITodoService todoService;
	
	@GetMapping("/users/{username}/todos")
	public List<TodoModel> getListAll(@PathVariable String username) {		
		return todoService.getListAll(username);
	}
	
	@DeleteMapping("/users/{username}/todos/{id}")
	public ResponseEntity<Void> deleteById(@PathVariable String username, @PathVariable long id) {
		
		TodoModel todoModel = todoService.deleteBy(id);
		
		if(todoModel != null) {
			return ResponseEntity.noContent().build();
		}
		
		return ResponseEntity.notFound().build();
	}
	
	
	@GetMapping("/users/{username}/todos/{id}")
	public TodoModel getObject(@PathVariable String username, @PathVariable long id) {
		TodoModel todoModel = todoService.findById(id);
		return todoModel;
	}
	
	@PutMapping("/users/{username}/todos/{id}")
	public ResponseEntity<TodoModel> updateTodo(@PathVariable String username, 
			@PathVariable long id, @RequestBody TodoModel todoModel) {
		
		TodoModel todoModelUpdated = todoService.save(todoModel);
		return new ResponseEntity<TodoModel>(todoModelUpdated, HttpStatus.OK);
	}
	
	@PostMapping("/users/{username}/todos")
	public ResponseEntity<Void> createTodo(@PathVariable String username, @RequestBody TodoModel todoModel) {
		
		TodoModel createdTodo = todoService.save(todoModel);
		
		//Location
		//Get current resource url
		//{id}
		URI uri = ServletUriComponentsBuilder.fromCurrentRequest()
				.path("{id}").buildAndExpand(createdTodo.getId()).toUri();
		
		return ResponseEntity.created(uri).build();
	}
}

